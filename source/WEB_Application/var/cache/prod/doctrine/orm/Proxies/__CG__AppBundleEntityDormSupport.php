<?php

namespace Proxies\__CG__\AppBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class DormSupport extends \AppBundle\Entity\DormSupport implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'AppBundle\\Entity\\DormSupport' . "\0" . 'useStartDate', '' . "\0" . 'AppBundle\\Entity\\DormSupport' . "\0" . 'useEndDate', '' . "\0" . 'AppBundle\\Entity\\DormSupport' . "\0" . 'isapproved', '' . "\0" . 'AppBundle\\Entity\\DormSupport' . "\0" . 'isdelivered', '' . "\0" . 'AppBundle\\Entity\\DormSupport' . "\0" . 'descrition', '' . "\0" . 'AppBundle\\Entity\\DormSupport' . "\0" . 'id', '' . "\0" . 'AppBundle\\Entity\\DormSupport' . "\0" . 'assistant', '' . "\0" . 'AppBundle\\Entity\\DormSupport' . "\0" . 'student', '' . "\0" . 'AppBundle\\Entity\\DormSupport' . "\0" . 'dormObjectssupp'];
        }

        return ['__isInitialized__', '' . "\0" . 'AppBundle\\Entity\\DormSupport' . "\0" . 'useStartDate', '' . "\0" . 'AppBundle\\Entity\\DormSupport' . "\0" . 'useEndDate', '' . "\0" . 'AppBundle\\Entity\\DormSupport' . "\0" . 'isapproved', '' . "\0" . 'AppBundle\\Entity\\DormSupport' . "\0" . 'isdelivered', '' . "\0" . 'AppBundle\\Entity\\DormSupport' . "\0" . 'descrition', '' . "\0" . 'AppBundle\\Entity\\DormSupport' . "\0" . 'id', '' . "\0" . 'AppBundle\\Entity\\DormSupport' . "\0" . 'assistant', '' . "\0" . 'AppBundle\\Entity\\DormSupport' . "\0" . 'student', '' . "\0" . 'AppBundle\\Entity\\DormSupport' . "\0" . 'dormObjectssupp'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (DormSupport $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getDormObjectssupp()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDormObjectssupp', []);

        return parent::getDormObjectssupp();
    }

    /**
     * {@inheritDoc}
     */
    public function setDormObjectssupp($dormObjectssupp)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDormObjectssupp', [$dormObjectssupp]);

        return parent::setDormObjectssupp($dormObjectssupp);
    }

    /**
     * {@inheritDoc}
     */
    public function getUseStartDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUseStartDate', []);

        return parent::getUseStartDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setUseStartDate($useStartDate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUseStartDate', [$useStartDate]);

        return parent::setUseStartDate($useStartDate);
    }

    /**
     * {@inheritDoc}
     */
    public function getUseEndDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUseEndDate', []);

        return parent::getUseEndDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setUseEndDate($useEndDate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUseEndDate', [$useEndDate]);

        return parent::setUseEndDate($useEndDate);
    }

    /**
     * {@inheritDoc}
     */
    public function isIsapproved()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isIsapproved', []);

        return parent::isIsapproved();
    }

    /**
     * {@inheritDoc}
     */
    public function setIsapproved($isapproved)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsapproved', [$isapproved]);

        return parent::setIsapproved($isapproved);
    }

    /**
     * {@inheritDoc}
     */
    public function isIsdelivered()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isIsdelivered', []);

        return parent::isIsdelivered();
    }

    /**
     * {@inheritDoc}
     */
    public function setIsdelivered($isdelivered)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsdelivered', [$isdelivered]);

        return parent::setIsdelivered($isdelivered);
    }

    /**
     * {@inheritDoc}
     */
    public function getDescrition()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDescrition', []);

        return parent::getDescrition();
    }

    /**
     * {@inheritDoc}
     */
    public function setDescrition($descrition)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDescrition', [$descrition]);

        return parent::setDescrition($descrition);
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getAssistant()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAssistant', []);

        return parent::getAssistant();
    }

    /**
     * {@inheritDoc}
     */
    public function setAssistant($assistant)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAssistant', [$assistant]);

        return parent::setAssistant($assistant);
    }

    /**
     * {@inheritDoc}
     */
    public function getStudent()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStudent', []);

        return parent::getStudent();
    }

    /**
     * {@inheritDoc}
     */
    public function setStudent($student)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStudent', [$student]);

        return parent::setStudent($student);
    }

}
